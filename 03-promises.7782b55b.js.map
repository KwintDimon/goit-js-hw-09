{"mappings":";AAYS,IAAIA,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAASC,KAAKC,SAAW,GAE/BC,YAAW,KACLH,GACFF,EAAQ,cAEVC,EAAO,yBAAyB,GARtB,IASJ,IAGMK,MAElB,SAA4BC,GAC1BC,QAAQC,IAAI,sBACZD,QAAQC,IAAIF,E,IAJ6BG,OAO3C,SAA0BC,GACxBH,QAAQC,IAAI,oBACZD,QAAQC,IAAIE,E","sources":["src/js/03-promises.js"],"sourcesContent":["// function createPromise(position, delay) {\n//   const shouldResolve = Math.random() > 0.3;\n//   if (shouldResolve) {\n//     // Fulfill\n//   } else {\n//     // Reject\n//   }\n// }\n\n//!!!!!!!!!Репета\nconst makeOrger = dish => {\n  const DELAY = 1000;\n  return new Promise((resolve, reject) => {\n    const passed = Math.random() > 0.5;\n\n    setTimeout(() => {\n      if (passed) {\n        resolve('your order')\n      }\n      reject('no finished your order')\n    },DELAY)\n  });\n};\nmakeOrger('bake').then(onMakeOrderSuccess).catch(onMakeOrderError);\n\nfunction onMakeOrderSuccess(result) {\n  console.log('onMakeOrderSuccess');\n  console.log(result);\n}\n\nfunction onMakeOrderError(error) {\n  console.log('onMakeOrderError');\n  console.log(error);\n}\n\n"],"names":["Promise","resolve","reject","passed","Math","random","setTimeout","then","result","console","log","catch","error"],"version":3,"file":"03-promises.7782b55b.js.map"}